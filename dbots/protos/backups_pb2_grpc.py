# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import backups_pb2 as backups__pb2


class BackupsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_stream(
                '/backups.Backups/Create',
                request_serializer=backups__pb2.CreateRequest.SerializeToString,
                response_deserializer=backups__pb2.CreateReply.FromString,
                )
        self.Load = channel.unary_stream(
                '/backups.Backups/Load',
                request_serializer=backups__pb2.LoadRequest.SerializeToString,
                response_deserializer=backups__pb2.LoadReply.FromString,
                )
        self.LoadStatus = channel.unary_unary(
                '/backups.Backups/LoadStatus',
                request_serializer=backups__pb2.LoadStatusRequest.SerializeToString,
                response_deserializer=backups__pb2.LoadStatusReply.FromString,
                )
        self.CancelLoad = channel.unary_unary(
                '/backups.Backups/CancelLoad',
                request_serializer=backups__pb2.CancelLoadRequest.SerializeToString,
                response_deserializer=backups__pb2.CancelLoadReply.FromString,
                )


class BackupsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Load(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelLoad(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackupsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_stream_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=backups__pb2.CreateRequest.FromString,
                    response_serializer=backups__pb2.CreateReply.SerializeToString,
            ),
            'Load': grpc.unary_stream_rpc_method_handler(
                    servicer.Load,
                    request_deserializer=backups__pb2.LoadRequest.FromString,
                    response_serializer=backups__pb2.LoadReply.SerializeToString,
            ),
            'LoadStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadStatus,
                    request_deserializer=backups__pb2.LoadStatusRequest.FromString,
                    response_serializer=backups__pb2.LoadStatusReply.SerializeToString,
            ),
            'CancelLoad': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelLoad,
                    request_deserializer=backups__pb2.CancelLoadRequest.FromString,
                    response_serializer=backups__pb2.CancelLoadReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'backups.Backups', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Backups(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/backups.Backups/Create',
            backups__pb2.CreateRequest.SerializeToString,
            backups__pb2.CreateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Load(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/backups.Backups/Load',
            backups__pb2.LoadRequest.SerializeToString,
            backups__pb2.LoadReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backups.Backups/LoadStatus',
            backups__pb2.LoadStatusRequest.SerializeToString,
            backups__pb2.LoadStatusReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelLoad(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/backups.Backups/CancelLoad',
            backups__pb2.CancelLoadRequest.SerializeToString,
            backups__pb2.CancelLoadReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
