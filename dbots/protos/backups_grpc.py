# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: backups.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import chatlogs_pb2
from . import backups_pb2


class BackupsBase(abc.ABC):

    @abc.abstractmethod
    async def Create(self, stream: 'grpclib.server.Stream[backups_pb2.CreateRequest, backups_pb2.CreateReply]') -> None:
        pass

    @abc.abstractmethod
    async def Load(self, stream: 'grpclib.server.Stream[backups_pb2.LoadRequest, backups_pb2.LoadReply]') -> None:
        pass

    @abc.abstractmethod
    async def LoadStatus(self, stream: 'grpclib.server.Stream[backups_pb2.LoadStatusRequest, backups_pb2.LoadStatusReply]') -> None:
        pass

    @abc.abstractmethod
    async def CancelLoad(self, stream: 'grpclib.server.Stream[backups_pb2.CancelLoadRequest, backups_pb2.CancelLoadReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/backups.Backups/Create': grpclib.const.Handler(
                self.Create,
                grpclib.const.Cardinality.UNARY_STREAM,
                backups_pb2.CreateRequest,
                backups_pb2.CreateReply,
            ),
            '/backups.Backups/Load': grpclib.const.Handler(
                self.Load,
                grpclib.const.Cardinality.UNARY_STREAM,
                backups_pb2.LoadRequest,
                backups_pb2.LoadReply,
            ),
            '/backups.Backups/LoadStatus': grpclib.const.Handler(
                self.LoadStatus,
                grpclib.const.Cardinality.UNARY_UNARY,
                backups_pb2.LoadStatusRequest,
                backups_pb2.LoadStatusReply,
            ),
            '/backups.Backups/CancelLoad': grpclib.const.Handler(
                self.CancelLoad,
                grpclib.const.Cardinality.UNARY_UNARY,
                backups_pb2.CancelLoadRequest,
                backups_pb2.CancelLoadReply,
            ),
        }


class BackupsStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Create = grpclib.client.UnaryStreamMethod(
            channel,
            '/backups.Backups/Create',
            backups_pb2.CreateRequest,
            backups_pb2.CreateReply,
        )
        self.Load = grpclib.client.UnaryStreamMethod(
            channel,
            '/backups.Backups/Load',
            backups_pb2.LoadRequest,
            backups_pb2.LoadReply,
        )
        self.LoadStatus = grpclib.client.UnaryUnaryMethod(
            channel,
            '/backups.Backups/LoadStatus',
            backups_pb2.LoadStatusRequest,
            backups_pb2.LoadStatusReply,
        )
        self.CancelLoad = grpclib.client.UnaryUnaryMethod(
            channel,
            '/backups.Backups/CancelLoad',
            backups_pb2.CancelLoadRequest,
            backups_pb2.CancelLoadReply,
        )
