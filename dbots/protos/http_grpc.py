# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: http.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import http_pb2


class HTTPBase(abc.ABC):

    @abc.abstractmethod
    async def Request(self, stream: 'grpclib.server.Stream[http_pb2.HTTPRequest, http_pb2.HTTPResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRateLimit(self, stream: 'grpclib.server.Stream[http_pb2.GetRateLimitRequest, http_pb2.RateLimit]') -> None:
        pass

    @abc.abstractmethod
    async def GetGlobalRateLimit(self, stream: 'grpclib.server.Stream[http_pb2.GetGlobalRateLimitRequest, http_pb2.RateLimit]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/http.HTTP/Request': grpclib.const.Handler(
                self.Request,
                grpclib.const.Cardinality.UNARY_UNARY,
                http_pb2.HTTPRequest,
                http_pb2.HTTPResponse,
            ),
            '/http.HTTP/GetRateLimit': grpclib.const.Handler(
                self.GetRateLimit,
                grpclib.const.Cardinality.UNARY_UNARY,
                http_pb2.GetRateLimitRequest,
                http_pb2.RateLimit,
            ),
            '/http.HTTP/GetGlobalRateLimit': grpclib.const.Handler(
                self.GetGlobalRateLimit,
                grpclib.const.Cardinality.UNARY_UNARY,
                http_pb2.GetGlobalRateLimitRequest,
                http_pb2.RateLimit,
            ),
        }


class HTTPStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Request = grpclib.client.UnaryUnaryMethod(
            channel,
            '/http.HTTP/Request',
            http_pb2.HTTPRequest,
            http_pb2.HTTPResponse,
        )
        self.GetRateLimit = grpclib.client.UnaryUnaryMethod(
            channel,
            '/http.HTTP/GetRateLimit',
            http_pb2.GetRateLimitRequest,
            http_pb2.RateLimit,
        )
        self.GetGlobalRateLimit = grpclib.client.UnaryUnaryMethod(
            channel,
            '/http.HTTP/GetGlobalRateLimit',
            http_pb2.GetGlobalRateLimitRequest,
            http_pb2.RateLimit,
        )
